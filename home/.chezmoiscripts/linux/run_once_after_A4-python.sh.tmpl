{{- $version  := "3.11" -}}
{{- if eq .osid "linux-ubuntu" -}}
#!/bin/sh

echo "[Dotfiles] Python"
echo "Install Python Build Tools"

build_tools="
    libssl-dev
    zlib1g-dev
    libbz2-dev
    libreadline-dev
    libsqlite3-dev
    curl
    libncursesw5-dev
    xz-utils
    tk-dev
    libxml2-dev
    libxmlsec1-dev
    libffi-dev
    liblzma-dev
"

sudo apt update
sudo apt install $build_tools

if [ ! -d {{ joinPath .chezmoi.homeDir ".pyenv" | quote }} ]; then
    echo "Install Pyenv"
    curl https://pyenv.run | bash
else
    echo "Already Pyenv is installed"
    echo "Update Pyenv"
    pyenv update
fi

if [ ! -d {{ joinPath .chezmoi.homeDir ".autoenv" | quote }} ]; then
    echo "Install autoenv"
    git clone https://github.com/hyperupcall/autoenv {{ joinPath .chezmoi.homeDir ".autoenv" }}
else
    echo "Already Autoenv is installed"
    echo "Update Pyenv"
    git -C {{ joinPath .chezmoi.homeDir ".autoenv" | quote }} pull
fi

latest_version=$(pyenv latest -k {{ $version | quote }})
if [ $? -ne 0 ]; then
    exit $?
fi

echo "Install Python $latest_version"
pyenv install -v --skip-existing $latest_version

echo "Set Python $latest_version as default"
global_version=$(pyenv global)
if [ $global_version != $latest_version ]; then
    pyenv global $latest_version
fi
pip install --upgrade pip setuptools wheel

echo "Create a Python virtualenv for Neovim"
pyenv virtualenv $latest_version vim
{{ joinPath .chezmoi.homeDir ".pyenv/versions/vim/bin/pip" }} install --upgrade pip setuptools wheel pynvim

{{ end -}}

